#MANJUNATHA PATKAR 4NM17CS100   
from prettytable import PrettyTable
import re
import texttable as tt
from tabulate import tabulate
inp=[]

def tokenize(file):
 f = open(file, 'r')

 operators = { '+': 'Additon Operator', '-' : 'Substraction Operator', '/' : 'Division Operator', '*': 'Multiplication Operator', '++' : 'increment Operator', '--' : 'Decrement Operator'}
 optr_keys = operators.keys()

 comments = {r'//' : 'Single Line Comment',r'/*' : 'Multiline Comment Start', r'*/' : 'Multiline Comment End', '/**/' : 'Empty Multiline comment'}
 comment_keys = comments.keys()

 header = {'.h': 'header file'}
 header_keys = header.keys()

 sp_header_files = {'stdio.h':'Standard Input Output Header', 'stdlib.h' : 'Standard Library Header'}

 datatype = {'int': 'Integer','float' : 'Floating Point', 'char': 'Character', 'void' : 'Void'}
 datatype_keys = datatype.keys()

 keyword = {'return' : 'Return', 'case' : 'Case', 'break':'Break','switch' : 'Switch', 'begin' : 'Begin keyword', 'end' : 'End keyword'}
 keyword_keys = keyword.keys()

 delimiter = {';':'Semicolon'}
 delimiter_keys = delimiter.keys()

 blocks = {'{' : 'Curly Brace Open', '}' : 'Curly Brace Closed', '(' : 'Open Parenthesis', ')' : 'Close Paranthesis'}
 block_keys = blocks.keys()

 builtin_functions = {'printf':'printf', 'main' : 'Main function', 'scanf' : 'scanf'}

 non_identifiers = ['_','`','~','!','@','#','$','%','^','&','|','"','{'
 ,'}','[',']','<','>','?','/', ',','=','\'',':']

 relational_operators = {'==' : 'Relational Equals to', '<=' : 'Less than or equal to',
                        '>=' : 'Greater than or equal to','!=' : 'Not Equal to'}

 numerals = ['0','1','2','3','4','5','6','7','8','9','10']

 insert_space = re.compile(r"([(<,+\-*=/%;:>)])")

 i = f.read()

 dataFlag = False
 token_list = []

 count = 0
 flag1=flag2=flag3=0
 program = i.split('\n')
 print("LEXICAL ANALYSIS:")
 print()
 for line in program:
    if line == '':
        continue
    count += 1
    print("Line #" +  str(count))
    print("Line :", line)
    line = insert_space.sub(" \\1 ", line)
    line = re.sub(r'\t', '', line)
    tokens = line.split(' ')

    tokens = [x for x in tokens if x]
    print(tokens)
    for token in tokens:
        token = token.strip('')
        if token == '':
            continue

        if token in builtin_functions.keys():
            if(token=='printf'):
                inp.append('t')
            elif(token=='main'):
                inp.append('e')
            print(token, ":", builtin_functions[token])

        elif token in block_keys:
            if(token=='('):
                inp.append('f')
            elif(token==')'):
                inp.append('g')    
            print(token, ":", blocks[token])

        elif token in optr_keys:
             print(tokens.index(token))
             print(token, ":", operators[token])
             inp.append('m')
            
        #elif token in comment_keys:
            #print("Comment Type: ", comments[token])
            
        elif '.h' in token:
            print(token, ":", sp_header_files[token])

        elif token in non_identifiers:
            
            if(token=='='and tokens[tokens.index(token) + 1] == '='):
                print((token + "="), ":", relational_operators[token + "="])
                tokens.pop(tokens.index(token) + 1)
                token += "="
                inp.append('o') 
            elif(token=='='):
                inp.append('k')
                print(token, ":", "Assignment operator")       
            elif(token==','):
                inp.append('i')
                print(token, ":", "comma operator")
              
            elif(token=='<' and tokens[tokens.index(token) + 1] == '=' ):
                 print((token + "="), ":", relational_operators[token + "="])
                 tokens.pop(tokens.index(token) + 1)
                 token += "="
                 inp.append('o')
            elif(token=='<'):
                inp.append('o') 
                print(token, ":", "less than")
             
            elif(token=='>' and tokens[tokens.index(token) + 1] == '='):
                 print((token + "="), ":", relational_operators[token + "="])
                 tokens.pop(tokens.index(token) + 1)
                 token += "="
                 inp.append('o')
            elif(token=='>'): 
                 inp.append('o')
                 print(token, ":", "greater than")
            elif(token=='\''):
                 inp.append('u')
                 print(token, ":", "single Quote")
            elif(token==':'):
                 inp.append('v')
                 print(token, ":", "colon")
            elif(token=='!' and tokens[tokens.index(token) + 1] == '=' ):
                 print((token + "="), ":", relational_operators[token + "="])
                 tokens.pop(tokens.index(token) + 1)
                 token += "="
                 inp.append('o') 

                  
            elif(token=='!'):
                 inp.append('m')
                 print(token, ":", "not operator") 

            
                    
            else: 
                inp.append('m')
                print(token, ":", "special symbol")

        elif token in delimiter:
            inp.append('h')
            print(token, ":" , delimiter[token])

        elif token in datatype_keys:
            inp.append('a')
            print(token, ":", datatype[token])
            token = "datatype"

        elif token in keyword_keys:
            if(token=='return'):
                inp.append('p')
            elif(token=='switch'):
                inp.append('n')
            elif(token=='begin'):
                inp.append('b')
            elif(token=='end'):
                inp.append('d')
            elif(token=='case'):
                inp.append('q')
            elif(token=='break'):
                inp.append('s')
            elif(token=='printf'):
                inp.append('t')
            print(keyword[token])
            token = "keyword"

        elif token in numerals:
            inp.append('l')
            print(token, ": Numeric Value")
            token = "num"
            
        elif (token not in non_identifiers) and ('()' not in token):
            inp.append('j')
            print(token, ": Identifier")
            token = "id"
        
        token_list.append(token)
    dataFlag = False
    inp.append('c')
    print()
 print(token_list)
 print("Done with LEXICAL ANALYSIS")
 print(inp)
 print()

 f.close()

st=[]
class Stack:
 def __init__(self):
    self.s = []
    self.st = [] 
 def pop(self):
    return self.s.pop()
 def push(self, item):
    self.s.append(item)
 def sizeOfStack(self):
    return len(self.s)
 def peak(self):
    return self.s[len(self.s)-1]
 def printStack(self,nonterminals,terminals,t,string22,str1):
    for i in range(len(self.s)):
        if(self.s[i] in terminals):
            self.st.append(terminals[self.s[i]])
        elif(self.s[i] in nonterminals):
            self.st.append(nonterminals[self.s[i]])  
        else:      
            self.st.append(self.s[i])
    #print(self.st,end=" ")        
    str2 = ' '.join(map(str, self.st)) 
    self.st=[]
    t.add_row([str2,str1,string22])

        
        
       


inpoot=[]
def foo(string ):
 global  index , inpIndex,inp,s,t,nonterminals,terminals,inpoot,temp


    
 if string[0] == 'r': # do reducing 
        temp1 = RulesTable[int(string[1:])]
        temp1 = temp1.split("->")
        g = temp1[1].split(" ")
        for i in range( len(g)*2 ):
            label = s.pop()
        num  = s.peak()
        s.push(temp1[0])
        s.push(int(LR1Table[num][goto[temp1[0]]]))
        index = int(LR1Table[num][goto[temp1[0]]])
        #s.printStack(t,inp,string)
        #s.printStack(nonterminals,terminals,string)
        string22=LR1Table[index][action[inp[inpIndex]]]
        #print(k)
        for l in range(inpIndex,len(inp)):
         inpoot.append(nonterminals[inp[l]])
        #print(string,end=" ")
        str1 =' '.join(map(str, inpoot)) 
        #print(str1,end=" ")
        #print() 
        inpoot=[]
        s.printStack(nonterminals,terminals,t,string22,str1)
 else: # do shifting 

        s.push(inp[inpIndex])
        s.push(int(string[1:]))
        inpIndex+=1 
        index = s.peak() 
        string22=LR1Table[index][action[inp[inpIndex]]]
        for l in range(inpIndex,len(inp)):
          inpoot.append(nonterminals[inp[l]])
        str1 = ""  
        str1 = ' '.join(map(str, inpoot))
        inpoot=[]
        s.printStack(nonterminals,terminals,t,string22,str1)

index = 0
inpIndex = 0  # input pointer 
nodeNum = 0  # number of node for graphviz 
flage =1

s = Stack()
file_name = input("Enter the input filename : ")
tokenize(file_name)
print()

headers= ['States','datatype','begin','NL','end','main','(',')','SC','comma','id','equals_to','number','operator','switch','condition','return','case','break','printf','$','S\'','S','MAINFUNC','MAIN','STMTS','STMT','DECLARE','DECVARS','DECVAR','EXPRESSION','VARNUM','WHILESTMT','WSTMT','RETURNSTMT']


table=[['0','s2','','','','','','','','','','','','','','','','','','','','','','1','','','','','','','','','','','',''],
['1','','','','','','','','','','','','','','','','','','','','','acc','','','','','','','','','','','','','',''],
['2','','s5','','','','','','','','','','','','','','','','','','','','','','3','4','','','','','','','','','',''],
['3','','','','','','','','','','','','','','','','','','','','','r1','','','','','','','','','','','','','',''],
['4','s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','','','','','','6','7','8','','','','9','','13'],
['5','','','s17','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['6','','','','','','','','','','','','','','','','','','','','','r2','','','','','','','','','','','','','',''],
['7','s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','r5','','','','','18','7','8','','','','9','','13'],
['8','','','','','','s19','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['9','r7','','','','','','','','','','r7','','','r7','r7','','','','r7','r7','r7','','','','','','','','','','','','',''],
['10','','','','','','','','','','','','','','','','s20','','','','','','','','','','','','','','','','','','',''],
['11','','','s21','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['12','','','','','','s22','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['13','r21','','','','','','','','','','r21','','','r21','r21','','','','r21','r21','r21','','','','','','','','','','','','',''],
['14','','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','23','24','','','','',''],
['15','','','s26','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['16','','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','27','','','',''],
['17','','','','s30','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['18','','','','','','','','','','','','','','','','','','','','','r4','','','','','','','','','','','','','',''],
['19','','','','','s31','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['20','','','','','','','','','','','','','','','','','s32','','','','','','','','','','','','','','','','','',''],
['21','','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','33','','','',''],
['22','','','','','s36','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['23','','','','','','r8','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['24','','','','','','r9','s37','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['25','','','','','','r11','r11','','s38','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['26','','','','','','','','s39','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['27','','','','','','s40','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['28','','','','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['29','','','','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['30','','','','','s41','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['31','r6','','','','','','','','','','r6','','','r6','r6','','','','r6','r6','r6','','','','','','','','','','','','',''],
['32','','','','','','','','','','','','','','','','s42','','','','','','','','','','','','','','','','','','',''],
['33','','','','','','','','','','','','','','','','','s43','','','','','','','','','','','','','','','','','',''],
['34','','','','','','','','','','','','','','','','','r13','','','','','','','','','','','','','','','','','',''],
['35','','','','','','','','','','','','','','','','','r14','','','','','','','','','','','','','','','','','',''],
['36','r20','','','','','','','','','','r20','','','r20','r20','','','','r20','r20','r20','','','','','','','','','','','','',''],
['37','','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','44','24','','','','',''],
['38','','','','','','','','s46','','s47','','','','','','','','','','','','','','','','','','','','','45','','','',''],
['39','','','','s48','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['40','','','','','s49','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['41','r3','','','','','','','','','','r3','','','r3','r3','','','','r3','r3','','','','','','','','','','','','','',''],
['42','','','','','','','','','','','','','','','','','','s50','','','','','','','','','','','','','','','','',''],
['43','','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','51','','','',''],
['44','','','','','','r10','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['45','','','','','','r12','r12','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['46','','','','','','r13','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['47','','','','','','r14','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['48','','','','','s55','','','','','','','','','','','','','','','','','','','','','','','','','','','','54',''],
['49','r17','','','','','','','','','','r17','','','r17','r17','','','','r17','r17','r17','','','','','','','','','','','','',''],
['50','','','','','s56','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['51','','','','s57','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['52','','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['53','','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['54','r15','','','','','','','','','','r15','','','r15','r15','','','','r15','15','r15','','','','','','','','','','','','',''],
['55','','','','','','','','','','','','s58','','','','','','','','','','','','','','','','','','','','','','',''],
['56','r18','','','','','','','','','','r18','','','r18','r18','','','','r18','18','r18','','','','','','','','','','','','',''],
['57','','','','','','s59','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['58','','','','','s60','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['59','','','','','s61','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['60','s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','62','63','64','','','','65','','69'],
['61','r19','','','','','','','','','','r19','','','r19','r19','','','','r19','r19','r19','','','','','','','','','','','','',''],
['62','','','','','','','','','','','','','s72','','','','','','','','','','','','','','','','','','','','','',''],
['63','s14','','','','','','','','','','s70','','r5','s71','s66','','','','s67','s68','','','','','','73','63','64','','','','65','','69'],
['64','','','','','','s74','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['65','r7','','','','','','','','','','r7','','r7','r7','r7','','','','r7','r7','','','','','','','','','','','','','',''],
['66','','','','','','','','','','','','','','','','s75','','','','','','','','','','','','','','','','','','',''],
['67','','','s76','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['68','','','','','','s77','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['69','r21','','','','','','','','','','r21','','r21','r21','r21','','','','r21','r21','','','','','','','','','','','','','',''],
['70','','','s78','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['71','','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','79','','',''],
['72','','','','','s80','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['73','','','','','','','','','','','','','r4','','','','','','','','','','','','','','','','','','','','','',''],
['74','','','','','s81','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['75','','','','','','','','','','','','','','','','','s82','','','','','','','','','','','','','','','','','',''],
['76','','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','83','','',''],
['77','','','','','s84','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['78','','','','','','','','s85','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['79','','','','','','s86','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['80','r16','','','','','','','','','','r16','','','r16','r16','','','','r16','r16','r16','','','','','','','','','','','','',''],
['81','r6','','','','','','','','','','r6','','r6','r6','r6','','','','r6','r6','','','','','','','','','','','','','',''],
['82','','','','','','','','','','','','','','','','s87','','','','','','','','','','','','','','','','','','',''],
['83','','','','','','','','','','','','','','','','','s88','','','','','','','','','','','','','','','','','',''],
['84','r20','','','','','','','','','','r20','','r20','r20','r20','','','','r20','r20','','','','','','','','','','','','','',''],
['85','','','','s89','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['86','','','','','s90','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['87','','','','','','','','','','','','','','','','','','s91','','','','','','','','','','','','','','','','',''],
['88','','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','92','','',''],
['89','','','','','s94','','','','','','','','','','','','','','','','','','','','','','','','','','','','93',''],
['90','r17','','','','','','','','','','r17','','r17','r17','r17','','','','r17','r17','','','','','','','','','','','','','',''],
['91','','','','','s95','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['92','','','','s96','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['93','r15','','','','','','','','','','r15','','r15','r15','r15','','','','r15','r15','','','','','','','','','','','','','',''],
['94','','','','','','','','','','','','s97','','','','','','','','','','','','','','','','','','','','','','',''],
['95','r18','','','','','','','','','','r18','','r18','r18','r18','','','','r18','r18','','','','','','','','','','','','','',''],
['96','','','','','','s98','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['97','','','','','s99','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['98','','','','','s100','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['99','s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','101','63','64','','','','65','','69'],
['100','r19','','','','','','','','','','r19','','r19','r19','r19','','','','r19','r19','','','','','','','','','','','','','',''],
['101','','','','','','','','','','','','','s102','','','','','','','','','','','','','','','','','','','','','',''],
['102','','','','','s103','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
['103','r16','','','','','','','','','','r16','','r16','r16','r16','','','','r16','r16','','','','','','','','','','','','','','','']]





print(tabulate(table, headers,tablefmt='grid'))






inp += "$"
#print(inp)
terminals={'S\'':'S\'','S':'S','A':'MAINFUNC','B':'MAIN','C':'STMTS','D':'STMT','E':'DECLARE','F':'EXPRESSION','G':'SWITCHSTMT','H':'RETURSTMT','I':'DECVARS','J':'DECVAR','K':'VARNUM','L':'SWTCH'}
nonterminals={'a':'datatype','b':'begin','c':'NL','d':'end','e':'main','f':'(','g':')','h':'SC','i':'comma','j':'id','k':'equals_to','l':'number','m':'operator','n':'switch','o':'condition','p':'return','q':'case','s':'break','t':'printf','u':'\'','v':':','$':'$'}
action = {'a':0,'e':1,'f':2,'g':3,'c':4,'h':5,'i':6,'j':7,'k':8,'l':9,'n':10,'b':11,'d':12,'p':13,'q':14,'u':15,'m':16,'v':17,'t':18,'s':19,'$':20}
goto ={'S\'':21 ,'S':22,'A':23,'B':24,'C':25,'D':26,'E':27,'I':28,'J':29,'K':30,'G':31,'L':32,'H':33}


LR1Table = []
LR1Table.append(['s2','','','','','','','','','','','','','','','','','','','','','','1','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','','','','acc','','','','','','','','','','','','','',''])
LR1Table.append(['','s5','','','','','','','','','','','','','','','','','','','','','','3','4','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','','','','r1','','','','','','','','','','','','','',''])
LR1Table.append(['s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','','','','','','6','7','8','','','','9','','13'])
LR1Table.append(['','','s17','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','','','','r2','','','','','','','','','','','','','',''])
LR1Table.append(['s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','r5','','','','','18','7','8','','','','9','','13'])
LR1Table.append(['','','','','','s19','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r7','','','','','','','','','','r7','','','r7','r7','','','','r7','r7','r7','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','s20','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','s21','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s22','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r21','','','','','','','','','','r21','','','r21','r21','','','','r21','r21','r21','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','23','24','','','','',''])
LR1Table.append(['','','s26','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','27','','','',''])
LR1Table.append(['','','','s30','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','','','','r4','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s31','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','s32','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','33','','','',''])
LR1Table.append(['','','','','s36','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r8','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r9','s37','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r11','r11','','s38','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s39','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s40','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s41','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r6','','','','','','','','','','r6','','','r6','r6','','','','r6','r6','r6','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','s42','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','s43','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','r13','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','r14','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r20','','','','','','','','','','r20','','','r20','r20','','','','r20','r20','r20','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','44','24','','','','',''])
LR1Table.append(['','','','','','','','s46','','s47','','','','','','','','','','','','','','','','','','','','','45','','','',''])
LR1Table.append(['','','','s48','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s49','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r3','','','','','','','','','','r3','','','r3','r3','','','','r3','r3','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','s50','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','51','','','',''])
LR1Table.append(['','','','','','r10','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r12','r12','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r13','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','r14','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s55','','','','','','','','','','','','','','','','','','','','','','','','','','','','54',''])
LR1Table.append(['r17','','','','','','','','','','r17','','','r17','r17','','','','r17','r17','r17','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s56','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','s57','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r15','','','','','','','','','','r15','','','r15','r15','','','','r15','15','r15','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','s58','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r18','','','','','','','','','','r18','','','r18','r18','','','','r18','18','r18','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s59','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s60','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s61','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','62','63','64','','','','65','','69'])
LR1Table.append(['r19','','','','','','','','','','r19','','','r19','r19','','','','r19','r19','r19','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','s72','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['s14','','','','','','','','','','s70','','r5','s71','s66','','','','s67','s68','','','','','','73','63','64','','','','65','','69'])
LR1Table.append(['','','','','','s74','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r7','','','','','','','','','','r7','','r7','r7','r7','','','','r7','r7','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','s75','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','s76','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s77','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r21','','','','','','','','','','r21','','r21','r21','r21','','','','r21','r21','','','','','','','','','','','','','',''])
LR1Table.append(['','','s78','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','79','','',''])
LR1Table.append(['','','','','s80','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','r4','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s81','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','s82','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','83','','',''])
LR1Table.append(['','','','','s84','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s85','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s86','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r16','','','','','','','','','','r16','','','r16','r16','','','','r16','r16','r16','','','','','','','','','','','','',''])
LR1Table.append(['r6','','','','','','','','','','r6','','r6','r6','r6','','','','r6','r6','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','s87','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','s88','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r20','','','','','','','','','','r20','','r20','r20','r20','','','','r20','r20','','','','','','','','','','','','','',''])
LR1Table.append(['','','','s89','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s90','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','','','','','','s91','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','92','','',''])
LR1Table.append(['','','','','s94','','','','','','','','','','','','','','','','','','','','','','','','','','','','93',''])
LR1Table.append(['r17','','','','','','','','','','r17','','r17','r17','r17','','','','r17','r17','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s95','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','s96','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r15','','','','','','','','','','r15','','r15','r15','r15','','','','r15','r15','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','s97','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r18','','','','','','','','','','r18','','r18','r18','r18','','','','r18','r18','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','s98','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s99','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s100','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','101','63','64','','','','65','','69'])
LR1Table.append(['r19','','','','','','','','','','r19','','r19','r19','r19','','','','r19','r19','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','','','','','','','','','s102','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['','','','','s103','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''])
LR1Table.append(['r16','','','','','','','','','','r16','','r16','r16','r16','','','','r16','r16','','','','','','','','','','','','','','',''])




RulesTable = []
RulesTable.append("S'->S")
RulesTable.append("S->a A")
RulesTable.append("A->B C")
RulesTable.append("B->e f g c")
RulesTable.append("C->D C")
RulesTable.append("C->D")
RulesTable.append("D->E h c")
RulesTable.append("D->G")
RulesTable.append("E->a I")
RulesTable.append("I->J")
RulesTable.append("I->J i I")
RulesTable.append("J->j")
RulesTable.append("J->j k K")
RulesTable.append("K->j")
RulesTable.append("K->l")
RulesTable.append("G->n f j g L")
RulesTable.append("L->c b c C d c")
RulesTable.append("H->p K h c")
RulesTable.append("D->q u m u v c")
RulesTable.append("D->t f K m K g h c")
RulesTable.append("D->s h c")
RulesTable.append("D->H")



s.push(0)
temp  = LR1Table[index][action[inp[inpIndex]]]
print()
print()
print("SEQUENTIAL PARSING STEPS:")
print()
t = tt.Texttable()
headings = ['Stack','Input','Action']
t.header(headings)

cd=[]
for l in range(0,len(inp)):
        cd.append(nonterminals[inp[l]])
cdstr = " "  
cdstr = ' '.join(map(str, cd)) 
t.add_row(['0',cdstr,temp])        



flag=0
#print(temp)
while(temp != "acc"):
 if temp == '':
    #print("ERROR")
    flag=1
    break
 foo(temp)
 temp  = LR1Table[index][action[inp[inpIndex]]]

s = t.draw()
print(s)   
#print(temp)
if(flag==1):
    print()
    print("ERROR!! The input doesnt satisfy the grammar")




#['datatype', 'main', '(', ')', 'datatype', 'id', ';', 'datatype', 'id', ',', 'id', ';', 'keyword', '(', 'id', ')', 'keyword', 'keyword', "'", '+', "'", ':', 'printf', '(', 'id', '+', 'id', ')', ';', 'keyword', ';', 'keyword', "'", '-', "'", ':', 'printf', '(', 'id', '-', 'id', ')', ';', 'keyword', ';', 'keyword', 'keyword', 'num', ';']
#Done with LEXICAL ANALYSIS
#['a', 'e', 'f', 'g', 'c', 'a', 'j', 'h', 'c', 'a', 'j', 'i', 'j', 'h', 'c', 'n', 'f', 'j', 'g', 'c', 'b', 'c', 'q', 'u', 'm', 'u', 'v', 'c', 'e', 'f', 'j', 'm', 'j', 'g', 'h', 'c', 's', 'h', 'c', 'q', 'u', 'm', 'u', 'v', 'c', 'e', 'f', 'j', 'm', 'j', 'g', 'h', 'c', 's', 'h', 'c', 'd', 'c', 'p', 'l', 'h', 'c']



#
#table=[['0','s2','','','','','','','','','','','','','','','','','','','','','','1','','','','','','','','','','','',''],
#['1','','','','','','','','','','','','','','','','','','','','','acc','','','','','','','','','','','','','',''],
#['2','','s5','','','','','','','','','','','','','','','','','','','','','','3','4','','','','','','','','','',''],
#['3','','','','','','','','','','','','','','','','','','','','','r1','','','','','','','','','','','','','',''],
#['4','s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','','','','','','6','7','8','','','','9','','13'],
#['5','','','s17','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['6','','','','','','','','','','','','','','','','','','','','','r2','','','','','','','','','','','','','',''],
#['7','s14','','','','','','','','','','s15','','','s16','s10','','','','s11','s12','r5','','','','','18','7','8','','','','9','','13'],
#['8','','','','','','s19','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['9','r7','','','','','','','','','','r7','','','r7','r7','','','','r7','r7','r7','','','','','','','','','','','','',''],
#['10','','','','','','','','','','','','','','','','s20','','','','','','','','','','','','','','','','','','',''],
#['11','','','s21','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['12','','','','','','s22','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['13','r21','','','','','','','','','','r21','','','r21','r21','','','','r21','r21','r21','','','','','','','','','','','','',''],
#['14','','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','23','24','','','','',''],
#['15','','','s26','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['16','','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','27','','','',''],
#['17','','','','s30','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['18','','','','','','','','','','','','','','','','','','','','','r4','','','','','','','','','','','','','',''],
#['19','','','','','s31','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['20','','','','','','','','','','','','','','','','','s32','','','','','','','','','','','','','','','','','',''],
#['21','','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','33','','','',''],
#['22','','','','','s36','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['23','','','','','','r8','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['24','','','','','','r9','s37','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['25','','','','','','r11','r11','','s38','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['26','','','','','','','','s39','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['27','','','','','','s40','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['28','','','','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['29','','','','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['30','','','','','s41','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['31','r6','','','','','','','','','','r6','','','r6','r6','','','','r6','r6','r6','','','','','','','','','','','','',''],
#['32','','','','','','','','','','','','','','','','s42','','','','','','','','','','','','','','','','','','',''],
#['33','','','','','','','','','','','','','','','','','s43','','','','','','','','','','','','','','','','','',''],
#['34','','','','','','','','','','','','','','','','','r13','','','','','','','','','','','','','','','','','',''],
#['35','','','','','','','','','','','','','','','','','r14','','','','','','','','','','','','','','','','','',''],
#['36','r20','','','','','','','','','','r20','','','r20','r20','','','','r20','r20','r20','','','','','','','','','','','','',''],
#['37','','','','','','','','s25','','','','','','','','','','','','','','','','','','','','','44','24','','','','',''],
#['38','','','','','','','','s46','','s47','','','','','','','','','','','','','','','','','','','','','45','','','',''],
#['39','','','','s48','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['40','','','','','s49','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['41','r3','','','','','','','','','','r3','','','r3','r3','','','','r3','r3','','','','','','','','','','','','','',''],
#['42','','','','','','','','','','','','','','','','','','s50','','','','','','','','','','','','','','','','',''],
#['43','','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','51','','','',''],
#['44','','','','','','r10','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['45','','','','','','r12','r12','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['46','','','','','','r13','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['47','','','','','','r14','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['48','','','','','s55','','','','','','','','','','','','','','','','','','','','','','','','','','','','54',''],
#['49','r17','','','','','','','','','','r17','','','r17','r17','','','','r17','r17','r17','','','','','','','','','','','','',''],
#['50','','','','','s56','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['51','','','','s57','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['52','','','','r13','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['53','','','','r14','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['54','r15','','','','','','','','','','r15','','','r15','r15','','','','r15','15','r15','','','','','','','','','','','','',''],
#['55','','','','','','','','','','','','s58','','','','','','','','','','','','','','','','','','','','','','',''],
#['56','r18','','','','','','','','','','r18','','','r18','r18','','','','r18','18','r18','','','','','','','','','','','','',''],
#['57','','','','','','s59','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['58','','','','','s60','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#['59','','','','','s61','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['60','s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','62','63','64','','','','65','','69'],
#['61','r19','','','','','','','','','','r19','','','r19','r19','','','','r19','r19','r19','','','','','','','','','','','','',''],
#['62','','','','','','','','','','','','','s72','','','','','','','','','','','','','','','','','','','','','',''],
#['63','s14','','','','','','','','','','s70','','r5','s71','s66','','','','s67','s68','','','','','','73','63','64','','','','65','','69'],
#['64','','','','','','s74','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['65','r7','','','','','','','','','','r7','','r7','r7','r7','','','','r7','r7','','','','','','','','','','','','','',''],
#['66','','','','','','','','','','','','','','','','s75','','','','','','','','','','','','','','','','','','',''],
#['67','','','s76','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['68','','','','','','s77','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['69','r21','','','','','','','','','','r21','','r21','r21','r21','','','','r21','r21','','','','','','','','','','','','','',''],
#['70','','','s78','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['71','','','','','','','','s28','','s29','','','','','','','','','','','','','','','','','','','','','79','','',''],
#['72','','','','','s80','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['73','','','','','','','','','','','','','r4','','','','','','','','','','','','','','','','','','','','','',''],
#['74','','','','','s81','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['75','','','','','','','','','','','','','','','','','s82','','','','','','','','','','','','','','','','','',''],
#['76','','','','','','','','s34','','s35','','','','','','','','','','','','','','','','','','','','','83','','',''],
#['77','','','','','s84','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['78','','','','','','','','s85','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['79','','','','','','s86','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['80','r16','','','','','','','','','','r16','','','r16','r16','','','','r16','r16','r16','','','','','','','','','','','','',''],
#['81','r6','','','','','','','','','','r6','','r6','r6','r6','','','','r6','r6','','','','','','','','','','','','','',''],
#['82','','','','','','','','','','','','','','','','s87','','','','','','','','','','','','','','','','','','',''],
#['83','','','','','','','','','','','','','','','','','s88','','','','','','','','','','','','','','','','','',''],
#['84','r20','','','','','','','','','','r20','','r20','r20','r20','','','','r20','r20','','','','','','','','','','','','','',''],
#['85','','','','s89','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['86','','','','','s90','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['87','','','','','','','','','','','','','','','','','','s91','','','','','','','','','','','','','','','','',''],
#['88','','','','','','','','s52','','s53','','','','','','','','','','','','','','','','','','','','','92','','',''],
#['89','','','','','s94','','','','','','','','','','','','','','','','','','','','','','','','','','','','93',''],
#['90','r17','','','','','','','','','','r17','','r17','r17','r17','','','','r17','r17','','','','','','','','','','','','','',''],
#['91','','','','','s95','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['92','','','','s96','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['93','r15','','','','','','','','','','r15','','r15','r15','r15','','','','r15','r15','','','','','','','','','','','','','',''],
#['94','','','','','','','','','','','','s97','','','','','','','','','','','','','','','','','','','','','','',''],
#['95','r18','','','','','','','','','','r18','','r18','r18','r18','','','','r18','r18','','','','','','','','','','','','','',''],
#['96','','','','','','s98','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['97','','','','','s99','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['98','','','','','s100','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['99','s14','','','','','','','','','','s70','','','s71','s66','','','','s67','s68','','','','','','101','63','64','','','','65','','69'],
#['100','r19','','','','','','','','','','r19','','r19','r19','r19','','','','r19','r19','','','','','','','','','','','','','',''],
#['101','','','','','','','','','','','','','s102','','','','','','','','','','','','','','','','','','','','','',''],
#['102','','','','','s103','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''],
#['103','r16','','','','','','','','','','r16','','r16','r16','r16','','','','r16','r16','','','','','','','','','','','','','','','']]
#
